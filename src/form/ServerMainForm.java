/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import domain.User;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import thread.ServerThread;

/**
 *
 * @author Nemanja
 */
public class ServerMainForm extends javax.swing.JFrame {

    private ServerThread serverThread;

    /**
     * Creates new form ServerMainForm
     */
    public ServerMainForm() {
        initComponents();
        jMenuItemStop.setEnabled(false);
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuServer = new javax.swing.JMenu();
        jMenuItemStart = new javax.swing.JMenuItem();
        jMenuItemStop = new javax.swing.JMenuItem();
        jMenuItemCurrentUser = new javax.swing.JMenuItem();
        jMenuConfiguration = new javax.swing.JMenu();
        jMenuItemServerConfig = new javax.swing.JMenuItem();
        jMenuItemDatabaseConfig = new javax.swing.JMenuItem();

        jMenuItem5.setText("jMenuItem5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenuServer.setText("Server");

        jMenuItemStart.setText("Start");
        jMenuItemStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStartActionPerformed(evt);
            }
        });
        jMenuServer.add(jMenuItemStart);

        jMenuItemStop.setText("Stop");
        jMenuItemStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemStopActionPerformed(evt);
            }
        });
        jMenuServer.add(jMenuItemStop);

        jMenuItemCurrentUser.setText("CurrentUser");
        jMenuItemCurrentUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCurrentUserActionPerformed(evt);
            }
        });
        jMenuServer.add(jMenuItemCurrentUser);

        jMenuBar1.add(jMenuServer);

        jMenuConfiguration.setText("Configuration");

        jMenuItemServerConfig.setText("Server configuration");
        jMenuConfiguration.add(jMenuItemServerConfig);

        jMenuItemDatabaseConfig.setText("Database configuration");
        jMenuConfiguration.add(jMenuItemDatabaseConfig);

        jMenuBar1.add(jMenuConfiguration);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 278, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStartActionPerformed
        if (serverThread == null || !serverThread.isAlive()) {
            try {
                serverThread = new ServerThread();
                serverThread.start();

                jMenuItemStart.setEnabled(false);
                jMenuItemStop.setEnabled(true);

            } catch (IOException ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            System.err.println("Server thread is already started!");
        }
    }//GEN-LAST:event_jMenuItemStartActionPerformed

    private void jMenuItemStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemStopActionPerformed

        try {
            if (serverThread.getServerSocket() != null && serverThread.getServerSocket().isBound()) {
                serverThread.getServerSocket().close();
                jMenuItemStart.setEnabled(true);
                jMenuItemStop.setEnabled(false);
            }
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }

    }//GEN-LAST:event_jMenuItemStopActionPerformed

    private void jMenuItemCurrentUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCurrentUserActionPerformed
        if (serverThread != null) {
            List<User> users = serverThread.getAllUsers();
            CurrentUserForm currentUserForm = new CurrentUserForm(this, true, users);
            currentUserForm.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItemCurrentUserActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuConfiguration;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItemCurrentUser;
    private javax.swing.JMenuItem jMenuItemDatabaseConfig;
    private javax.swing.JMenuItem jMenuItemServerConfig;
    private javax.swing.JMenuItem jMenuItemStart;
    private javax.swing.JMenuItem jMenuItemStop;
    private javax.swing.JMenu jMenuServer;
    // End of variables declaration//GEN-END:variables
}
